#lang racket
"1a"
(define (ancestor-gen n)
  (if (= n 0)
      1
      (* 2 (ancestor-gen (- n 1)))
      )
  )
(ancestor-gen 2)
(ancestor-gen 3)
(ancestor-gen 4)
"1b"
(define (num-ancestors n)
  (if (= n 0)
      0
      (+ (ancestor-gen n) (num-ancestors (- n 1)))
      )
  )
(num-ancestors 2)
(num-ancestors 3)
(num-ancestors 4)
"2a"
(define (pell-num n)
  (cond ((= n 0) 2)
        ((= n 1) 2)
        ((> n 1) (+ (* 2 (pell-num (- n 1)))
                    (pell-num (- n 2))))
        )
  )
(pell-num 2)
(pell-num 3)
(pell-num 4)
(pell-num 5)
